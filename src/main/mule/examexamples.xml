<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="e50c9bff-4d77-4935-8c93-e7f627eda041" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<http:listener-config name="HTTP_Listener_config2" doc:name="HTTP Listener config" doc:id="755b6980-ea89-4886-b851-fc5e1e768457" >
		<http:listener-connection host="0.0.0.0" port="8084" />
	</http:listener-config>
	<flow name="examsExamplesFlow" doc:id="69491727-0537-42c5-b0c1-f5d0e32b9e51" >
		<set-payload value="#['REGION']" doc:name="'REGION'" doc:id="9bf23ccf-ae87-4c88-b0cb-7cf1b070f034" />
		<choice doc:name="Choice" doc:id="153b841c-4d5f-46b4-9229-371557df2514" >
			<when expression="#[not isEmpty(payload)]">
				<set-payload value="#['US']" doc:name="Set Payload" doc:id="79083b26-b06c-4334-bb54-a14336455306" />
			</when>
			<when expression="#[payload is String]">
				<set-payload value="#[payload]" doc:name="Set Payload" doc:id="a2a0a3a9-1ad6-479a-8b7c-08137f2fcbeb" />
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" doc:id="f120d152-fdd9-4c3d-9af8-99e628ed68b4" message="#[payload]" />
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="f4da8cc2-fcce-4cbc-9435-a0e205d17093" message="#[payload]"/>
	</flow>
	<flow name="examsExamplesFlow1" doc:id="abd3062f-ed33-4795-ad2c-e40610aec51d" >
		<set-payload value='#[output application/json
&#10;
&#10;var objects = {
&#10;	"account": {
&#10;		"accountID": "5923859",
&#10;		"name": "JimGaz",
&#10;		"balance": 4222
&#10;	},
&#10;	"account": {
&#10;		"accountID": "121859",
&#10;		"name": "Helen",
&#10;		"balance": 421
&#10;	},
&#10;	"account": {
&#10;		"accountID": "12593989",
&#10;		"name": "Jason",
&#10;		"balance": 234
&#10;	},
&#10;	
&#10;}
&#10; 
&#10;---
&#10;objects]' doc:name="Object Account" doc:id="b397134c-3c88-4c01-88cd-cdef9106c30d" />
		<foreach doc:name="For Each" doc:id="6aed5f0e-446a-4041-bdd8-55ee288057bf" >
			<file:write doc:name="Write" doc:id="5caf96a5-9995-48a8-891c-a0f98a3bccc7" path='#["C:\Users\JimGaz\Desktop\Sample" ++ random()]'>
				<file:content ><![CDATA[#[output application/json --- payload]]]></file:content>
			</file:write>
		</foreach>
		<logger level="INFO" doc:name="Logger" doc:id="7879a3d0-6943-43fd-8465-4763c39bd96f" message='#["End Log": payload]'/>
	</flow>
	<flow name="examsExamplesFlow2" doc:id="98bd99cc-d109-4a6a-bfd2-604119e2e536" >
		<set-payload value="#[[2000, 200, 1000, 100]]" doc:name="Set Payload" doc:id="1212f432-05fd-4f56-a4bd-09bca12d450a" />
		<foreach doc:name="For Each" doc:id="7971177b-6c11-48cc-aaa2-a31954951817" >
			<set-payload value='#[import * from dw::Runtime
&#10;output application/json
&#10;---
&#10;payload wait 2000]' doc:name="Set Payload" doc:id="0590ded9-8166-448b-bccb-c03e6be1948d" />
			<logger level="INFO" doc:name="Logger" doc:id="fbf26c99-74d4-44c8-8f1c-82dae61ca447" message="#[payload]"/>
		</foreach>
		<logger level="INFO" doc:name="Copy_of_Logger" doc:id="037b6eca-0c6b-47b4-85bc-c65527b3e4ff" message="#[payload]" />
		<set-payload value="#[[4000, 40, 3000, 300]]" doc:name="Set Payload" doc:id="26d29ad5-3d6d-4950-9a2b-afcb45d6d754" />
		<batch:job jobName="Batch_Job" doc:id="3160d99d-51bd-482f-9bfd-90f2d81909e7" blockSize="1">
			<batch:process-records >
				<batch:step name="Batch_Step" doc:id="7d327bf7-4748-408d-a395-d0a2ab39e6c9" >
					<set-payload value="#[import * from dw::Runtime
&#10;output application/json
&#10;---
&#10;payload wait 2000]" doc:name="Set Payload" doc:id="0e41c35e-9e16-41e8-af42-66a346f80d2e" />
					<logger level="INFO" doc:name="Logger" doc:id="2c400317-487d-490a-b88b-8021f9361b36" message="#[payload]"/>
				</batch:step>
			</batch:process-records>
		</batch:job>
	</flow>
	<flow name="examsExamplesFlow3" doc:id="daee6686-5581-46c0-9d71-f237beeff1b9" >
		<set-payload value='#[["APPLE", "BANANA"]]' doc:name='["APPLE", "BANANA"]' doc:id="95278404-6821-4b24-ad99-512124b8bd22" />
		<batch:job jobName="examsExamplesBatch_Job" doc:id="f4396f93-c139-42c4-86df-bc6a339d1132" >
			<batch:process-records >
				<batch:step name="Batch_Step1" doc:id="2f86492d-776d-4078-a1be-291449acc6b3" >
					<set-payload value="#[payload ++ 1]" doc:name="payload ++ 1" doc:id="833d383b-06bf-4f79-a799-e1d04fcd28d2" />
					<logger level="INFO" doc:name="[APPLE1, BANANA1]" doc:id="4c1c98df-068e-4580-9eec-50ecc69160b2" message="#[payload]" />
				</batch:step>
				<batch:step name="Batch_Step2" doc:id="c0dd35af-6123-4393-a141-30966dce905e" >
					<set-payload value="#[payload ++ 2]" doc:name="payload ++ 2" doc:id="1707868d-cd5f-4978-847e-1ef4ea88455d" />
					<logger level="INFO" doc:name="[APPLE12, BANANA12]" doc:id="b860dbbb-3c32-40ee-9fdf-b30a818d768b" message="#[payload]" />
				</batch:step>
			</batch:process-records>
		</batch:job>
	</flow>
	<flow doc:id="fe095c52-133b-4417-a5a7-f10046adf55a" name="ErrorFlow">
		<http:listener doc:name="Listener" doc:id="2384cc64-b291-4848-af7a-f6e56b34a2c1" config-ref="HTTP_Listener_config" allowedMethods="POST" path="/test"/>
		<try doc:name="Try" doc:id="8dfc5e35-0d40-45e9-bba1-71b13791f5ef" >
			<validation:is-null doc:name="Is null" doc:id="4b25244d-0802-4865-b486-f438152e4f01" value="#[payload]" message="Validation Error"/>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="dccf5815-aef5-4d9b-bae8-356d4e92c868" >
					<set-payload value='#["Error 1"]' doc:name='"Error 1"' doc:id="f576dd69-3d67-4025-bf82-d08ff519ab9c" />
				</on-error-propagate>
			</error-handler>
		</try>
		<set-payload value='#["End"]' doc:name='"End"' doc:id="1cf95ae4-46cc-42bf-b30a-797305d2f1b6" />
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="a2a37aa6-4a8a-41f8-813e-fd57ad41631c" >
				<set-payload value='#["Error 2"]' doc:name='"Error 2"' doc:id="5eb05216-5d29-4e85-a1b7-1eb66eca66bf" />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="examsExamplesFlow4" doc:id="2e9e2775-fc68-4a1d-acdb-d0407cd98f56" >
		<set-payload value="#[[1,2,3,4,5,6]]" doc:name="[1,2,3,4,5,6]" doc:id="32597e43-09cd-4159-ae3a-deb37dd81b44" />
		<batch:job jobName="examsExamplesBatch_Job1" doc:id="1ffe0e97-958b-4afe-9d9a-7e50191a44aa" >
			<batch:process-records >
				<batch:step name="Batch_Step3" doc:id="31f1984d-c471-4cc0-81ab-636f8acaf395" >
					<ee:transform doc:name="payload * 10" doc:id="9e91be83-19f2-4267-95bc-5b4d2b1f6399" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload * 10]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<batch:aggregator doc:name="Batch Aggregator" doc:id="d160761d-48b0-4f94-8fcf-05188735236e" size="2">
						<logger level="INFO" doc:name="payload" doc:id="636a589b-0da7-41d2-bfdf-a994a5faf11b" message="#[payload]"/>
					</batch:aggregator>
				</batch:step>
			</batch:process-records>
		</batch:job>
	</flow>
	<flow name="examsExamplesFlow5" doc:id="71484a1e-c498-4208-8c3e-435526ff8231" >
		<set-payload value="#[[1,2,3,4]]" doc:name="Set Payload" doc:id="4ce8d6e4-bfcc-4b45-9b0f-49f80ec3115c" />
		<foreach doc:name="For Each" doc:id="7a6c8fec-1a37-400b-a99b-8a3f9c4ad8dc" >
			<set-payload value='#["order" ++ payload]' doc:name="Set Payload" doc:id="198a6a3e-e1c0-4120-9f6d-1a46d0d1d1b2" />
		</foreach>
		<logger level="INFO" doc:name="Logger" doc:id="0a7597aa-6436-49d6-96a0-f6f3404da77c" message="#[payload]"/>
	</flow>
	<flow name="color" doc:id="19b7ae31-ff8c-4293-a3f5-5de4d4355185" >
		<http:listener doc:name="PUT" doc:id="e1425c68-a13b-4f6a-8a97-bf606533566d" config-ref="HTTP_Listener_config2" path="/color" allowedMethods="PUT"/>
		<set-payload value="#[payload]" doc:name="Default payload Blue" doc:id="a293a9b9-0497-4170-91d1-4561bd4c9ae5" />
		<choice doc:name="Choice" doc:id="0e88acac-8c0b-46e3-b7fd-b3cba26a1909" >
			<when expression='#[payload contains "Red"]'>
				<set-payload value='"Blk"' doc:name='"Blk"' doc:id="839a956b-e322-4a55-b2bf-3fd674950199" />
			</when>
			<when expression='#[payload contains "Blk"]'>
				<set-payload value="Green" doc:name="Green" doc:id="63967406-c021-4866-888c-1eb75d8384aa" />
			</when>
			<otherwise >
				<set-payload value='#["Red"]' doc:name='"Red"' doc:id="a4000cab-b477-4bf6-bd15-dc0df9190acf" />
				<flow-ref doc:name="Flow Reference" doc:id="84711bd1-6139-4b89-b638-0f0fe85b71e2" name="color"/>
			</otherwise>
		</choice>
		<set-payload value="#[payload]" doc:name="Set Payload" doc:id="ec86e43c-6005-4401-9654-5617f8516cd1" />
		<logger level="INFO" doc:name="Logger" doc:id="687215cf-286e-4345-a34a-e23f7a89282a" message="#[payload]"/>
	</flow>
	<flow name="batchJob" doc:id="2597325b-18de-44aa-adab-c12eabfcb57d" >
		<http:listener doc:name="Listener" doc:id="d093af65-62b6-4603-8a7a-3f07f84bfc82" config-ref="HTTP_Listener_config2" path="/bj"/>
		<set-payload value='#[[&#10;	{"name": "ProductA", "amount": 100, "price": "200"},&#10;	{"name": "ProductB", "amount": 40, "price": "400"},&#10;	{"name": "ProductC", "amount": 2, "price": "600"}&#10;]]' doc:name="Set Payload" doc:id="61127081-d06a-46a1-8016-b39716009ed3" />
		<batch:job jobName="examexamplesBatch_Job" doc:id="c373fe51-2669-4627-b729-49dbe74ea8d3" maxFailedRecords="-1">
			<batch:process-records >
				<batch:step name="Lessthan50" doc:id="05753d77-87be-4b0d-b3b4-08a490f68a48" acceptExpression="#[payload.amount &lt; 50]" acceptPolicy="ALL">
					<set-payload value='#["amount": payload.amount + 100]' doc:name="Set Payload" doc:id="786fcb8d-c28f-474c-9b7c-bc4834ededcb" />
					<logger level="INFO" doc:name="Logger" doc:id="7fc4b4c2-432e-4bbd-a4f4-863c3acb387c" message="#[payload]"/>
				</batch:step>
				<batch:step name="Greaterthan20" doc:id="585f2016-009d-43cf-83e5-1ace52a458c5" acceptExpression="#[payload.amount &gt; 20]" acceptPolicy="ALL">
					<set-payload value='#["step2amount": payload.amount]' doc:name="Set Payload" doc:id="a4f7a49a-ea78-4e96-8e63-925e60fb3f71" />
					<logger level="INFO" doc:name="Logger" doc:id="5f8de5d2-e5fb-4a0f-b6a0-51149b6515e3" message="#[payload]"/>
				</batch:step>
			</batch:process-records>
		</batch:job>
	</flow>

</mule>
